import numpy
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d.axes3d import Axes3D

m=9
n=3

x=numpy.arange(0,25,1e-2)

In = numpy.loadtxt('ejem_3_data.npy')
D=numpy.matrix(In.reshape(m,n)) #Lo transformo a matriz mxn
b=D[:,-1] #ultima col de D
A=D[:,:-1] #todas las col de D menos la ultima
A=numpy.hstack((numpy.matrix(numpy.ones((m,1))),A)) #si h pego 
Q,R=numpy.linalg.qr(A);
xQR=numpy.linalg.solve(R,Q.T*b)
print xQR

#def parab(x):
#	return xQR[0,0]+xQR[1,0]*x+xQR[2,0]*x*x

#fig=plt.figure(figsize=(18,6))
#ax=plt.axes(xlim=(-1,25),ylim=(-200,1200))

#plt.plot(D[:,0],b,'ro')
#plt.plot(x,parab(x))

#plt.show()
#plt.close(fig)

fig = figure(figsize=(14,6))

# `ax` es una instancia de ejes 3D, ya que se usó el argumento projection='3d' en add_subplot
ax = fig.add_subplot(1, 2, 1, projection='3d')

p = ax.plot_surface(X, Y, Z, rstride=4, cstride=4, linewidth=0)

# Gráfico de superficie con gradación de color y barra de color
ax = fig.add_subplot(1, 2, 2, projection='3d')
p = ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap=cm.coolwarm, linewidth=0, antialiased=False)
cb = fig.colorbar(p, shrink=0.5)





#A=2.1
#k=3.
#w=55.
#L=2*numpy.pi/k
#f=w/2./numpy.pi

#x=numpy.arange(0,2*numpy.pi,1e-2)
#y=numpy.arange(-10,10,1e-2)

#T=10
#t=numpy.arange(0,T,1e-3)

#def wave(y,t):
#  return A*numpy.cos(k*y - w*t)
#def wave2(y,t):
#  return A*numpy.cos(k*y + w*t)

#fig=plt.figure(figsize=(18,6))
#ax=plt.axes(xlim=(-6,10),ylim=(-2*A, 2*A))

#line,=ax.plot([],[],linewidth=3,color='magenta')
#der,=ax.plot([],[],linewidth=3,color='cyan')
#izq,=ax.plot([],[],linewidth=3,color='green')

#def init():
#  line.set_data([],[])
#  der.set_data([],[])
#  izq.set_data([],[])
#  return line, der, izq

#plt.plot(x,wave(x,0))

#def animate(j):
#  line.set_data(x,wave(x,t[j])+wave2(x,t[j]))
#  der.set_data(y,wave(y,t[j]))
#  izq.set_data(y,wave2(y,t[j]))
#  return line, der, izq

#anim=animation.FuncAnimation(fig,animate,init_func=init,frames=len(t),interval=1,blit=False,repeat=False)

#plt.show()

#plt.close(fig)
